<h1 class="countdown">
  <span
    id="hours"
    class="hidden"
    style="--value:0;"
    aria-live="polite"
    aria-label="0"></span><span
    id="hours-suffix"
    data-suffix="h"
    class="suffix hidden"></span>
  <span
    id="minutes"
    class="hidden"
    style="--value:0;"
    aria-live="polite"
    aria-label="0"></span><span
    id="minutes-suffix"
    data-suffix="m"
    class="suffix hidden"></span>
  <span id="seconds" style="--value:0;" aria-live="polite" aria-label="0"
  ></span>s
</h1>

<style>
  .suffix::before {
    content: attr(data-suffix);
  }
</style>

<script>
  import { gameState } from "@/stores/gameStateStore"
  import { time } from "@/stores/timeStore"

  const hoursElement = document.getElementById("hours")
  const minutesElement = document.getElementById("minutes")
  const secondsElement = document.getElementById("seconds")

  const hourSuffixElement = document.getElementById("hours-suffix")
  const minuteSuffixElement = document.getElementById("minutes-suffix")

  const formatTime = (secondsElapsed: number) => {
    const seconds = secondsElapsed % 60
    let minutes = null
    let hours = null

    if (secondsElapsed >= 60) {
      minutes = Math.floor(secondsElapsed / 60) % 60
    }

    if (secondsElapsed >= 3600) {
      hours = Math.floor(secondsElapsed / 3600)
    }

    return { hours, minutes, seconds }
  }

  time.subscribe((s) => {
    if (
      hoursElement === null ||
      minutesElement === null ||
      secondsElement === null ||
      hourSuffixElement === null ||
      minuteSuffixElement === null
    )
      return

    const { hours, minutes, seconds } = formatTime(s)

    if (hours) {
      hoursElement.classList.remove("hidden")
      hoursElement.setAttribute("aria-label", hours.toString())
      hoursElement.style.setProperty("--value", hours.toString())

      hourSuffixElement.classList.remove("hidden")
    }

    if (minutes) {
      minutesElement.classList.remove("hidden")
      minutesElement.setAttribute("aria-label", minutes.toString())
      minutesElement.style.setProperty("--value", minutes.toString())

      minuteSuffixElement.classList.remove("hidden")
    }

    secondsElement.setAttribute("aria-label", seconds.toString())
    secondsElement.style.setProperty("--value", seconds.toString())

    if (s === 0) {
      hoursElement.classList.add("hidden")
      minutesElement.classList.add("hidden")

      hourSuffixElement.classList.add("hidden")
      minuteSuffixElement.classList.add("hidden")
    }

    setTimeout(() => {
      if (gameState.get() === "PLAYING") {
        time.set(s + 1)
      }
    }, 1000)
  })

  gameState.subscribe((s) => {
    if (s === "IDLE") time.set(0)
    if (s === "PLAYING") {
      setTimeout(() => {
        if (gameState.get() === "PLAYING") {
          time.set(1)
        }
      }, 1000)
    }
  })
</script>
